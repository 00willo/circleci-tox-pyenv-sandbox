version: 2

jobs:
  checkout_code:
    docker:
      - image: python:3.6
    steps:
      - checkout
      - save_cache:
          key: v2-repo_code-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/project
  build_deps:
    docker:
      - image: python:3.6
    steps:
      - restore_cache:
          key: v2-repo_code-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v2-pyenv_cache-{{ checksum "pyenv-requirements.txt" }}
            - v2-pyenv_cache-
      - restore_cache:
          keys:
            - v2-pip_cache-{{ checksum "requirements.txt" }}
            - v2-pip_cache-
      - run:
          name: Update pip
          command: |
            pwd
            pip install --upgrade pip
            pip install --upgrade setuptools
      - run:
          name: Download pyenv
          command: |
            set +e
            pyenv versions
            set -e
            retval=$?
            if [ $retval -ne 0 ]; then
              echo "pyenv not present, installing..."
              git clone https://github.com/yyuu/pyenv.git ~/.pyenv
              git clone https://github.com/yyuu/pyenv-virtualenvwrapper.git ~/.pyenv/plugins/pyenv-virtualenvwrapper
            else
              echo "pyenv was found, skipping install"
            fi
      - run:
          name: Configure pyenv
          command: |
            echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $BASH_ENV
            echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> $BASH_ENV
            echo 'eval "$(pyenv init -)"' >> ~/.bashrc
            echo 'pyenv virtualenvwrapper' >> ~/.bashrc
            source $BASH_ENV
            source ~/.bashrc
            pyenv versions
      - run:
          name: Test basic pyenv install
          command: |
            cat ~/.bashrc
            pyenv versions
      - run:
          name: Install required python versions with pyenv and tox
          command: |
            cat pyenv-requirements.txt
            pyenv install pyenv-requirements.txt
            pyenv global system 3.5.6 3.6.6 3.7.1 3.8-dev
            pip install tox tox-pyenv
      - run:
          name: Install deps
          command: |
            pip install -r requirements.txt
      - save_cache:
          key: v2-pip_cache-{{ checksum "requirements.txt" }}
          paths:
            - ~/.cache/pip
      - save_cache:
          key: v2-pyenv_cache-{{ checksum "pyenv-requirements.txt" }}
          paths:
            - ~/.pyenv
  test:
    docker:
      - image: python:3.6
    steps:
      - restore_cache:
          key: v2-repo_code-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v2-pyenv_cache-{{ checksum "pyenv-requirements.txt" }}
            - v2-pyenv_cache-
      - restore_cache:
          keys:
            - v2-pip_cache-{{ checksum "requirements.txt" }}
            - v2-pip_cache-
      - run:
          name: Configure pyenv
          command: |
            echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $BASH_ENV
            echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> $BASH_ENV
            echo 'eval "$(pyenv init -)"' >> ~/.bashrc
            echo 'pyenv virtualenvwrapper' >> ~/.bashrc
            source $BASH_ENV
            source ~/.bashrc
            pyenv versions
      - run:
          name: Confirm versions
          command: |
            pyenv versions
            pyenv local 3.5.6
            python -V
            pyenv local 3.6.6
            rm .python-version
            pyenv local 3.7.1
      - run:
          name: Run tox tests
          command: |
            pyenv versions
            pyenv global system 3.5.6 3.6.6 3.7.1 3.8-dev
            pip install tox tox-pyenv retox
            tox
      - run:
          name: Run retox tests to compare
          command: |
            retox

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - build_deps:
          requires:
            - checkout_code
      - test:
          requires:
            - build_deps
